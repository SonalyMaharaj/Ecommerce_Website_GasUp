//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GasUp_Website.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_AvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Product_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Product_SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_imageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Availability {
            get {
                return this.Product_AvailabilityField;
            }
            set {
                if ((this.Product_AvailabilityField.Equals(value) != true)) {
                    this.Product_AvailabilityField = value;
                    this.RaisePropertyChanged("Product_Availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Category {
            get {
                return this.Product_CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_CategoryField, value) != true)) {
                    this.Product_CategoryField = value;
                    this.RaisePropertyChanged("Product_Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Description {
            get {
                return this.Product_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_DescriptionField, value) != true)) {
                    this.Product_DescriptionField = value;
                    this.RaisePropertyChanged("Product_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Product_Price {
            get {
                return this.Product_PriceField;
            }
            set {
                if ((this.Product_PriceField.Equals(value) != true)) {
                    this.Product_PriceField = value;
                    this.RaisePropertyChanged("Product_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Product_Size {
            get {
                return this.Product_SizeField;
            }
            set {
                if ((this.Product_SizeField.Equals(value) != true)) {
                    this.Product_SizeField = value;
                    this.RaisePropertyChanged("Product_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_image {
            get {
                return this.Product_imageField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_imageField, value) != true)) {
                    this.Product_imageField = value;
                    this.RaisePropertyChanged("Product_image");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Installation", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Installation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Install_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Install_DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Install_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Install_ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Install_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Install_PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Install_Description {
            get {
                return this.Install_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Install_DescriptionField, value) != true)) {
                    this.Install_DescriptionField = value;
                    this.RaisePropertyChanged("Install_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Install_Duration {
            get {
                return this.Install_DurationField;
            }
            set {
                if ((this.Install_DurationField.Equals(value) != true)) {
                    this.Install_DurationField = value;
                    this.RaisePropertyChanged("Install_Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Install_Id {
            get {
                return this.Install_IdField;
            }
            set {
                if ((this.Install_IdField.Equals(value) != true)) {
                    this.Install_IdField = value;
                    this.RaisePropertyChanged("Install_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Install_Image {
            get {
                return this.Install_ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Install_ImageField, value) != true)) {
                    this.Install_ImageField = value;
                    this.RaisePropertyChanged("Install_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Install_Name {
            get {
                return this.Install_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Install_NameField, value) != true)) {
                    this.Install_NameField = value;
                    this.RaisePropertyChanged("Install_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Install_Price {
            get {
                return this.Install_PriceField;
            }
            set {
                if ((this.Install_PriceField.Equals(value) != true)) {
                    this.Install_PriceField = value;
                    this.RaisePropertyChanged("Install_Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplyCOC", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class ApplyCOC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Apply_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Apply_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Apply_InstallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Apply_PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apply_Email {
            get {
                return this.Apply_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.Apply_EmailField, value) != true)) {
                    this.Apply_EmailField = value;
                    this.RaisePropertyChanged("Apply_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Apply_Id {
            get {
                return this.Apply_IdField;
            }
            set {
                if ((this.Apply_IdField.Equals(value) != true)) {
                    this.Apply_IdField = value;
                    this.RaisePropertyChanged("Apply_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apply_Install {
            get {
                return this.Apply_InstallField;
            }
            set {
                if ((object.ReferenceEquals(this.Apply_InstallField, value) != true)) {
                    this.Apply_InstallField = value;
                    this.RaisePropertyChanged("Apply_Install");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apply_PhoneNumber {
            get {
                return this.Apply_PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Apply_PhoneNumberField, value) != true)) {
                    this.Apply_PhoneNumberField = value;
                    this.RaisePropertyChanged("Apply_PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Query", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Query : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Query_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Email {
            get {
                return this.Query_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_EmailField, value) != true)) {
                    this.Query_EmailField = value;
                    this.RaisePropertyChanged("Query_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Query_Id {
            get {
                return this.Query_IdField;
            }
            set {
                if ((this.Query_IdField.Equals(value) != true)) {
                    this.Query_IdField = value;
                    this.RaisePropertyChanged("Query_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Message {
            get {
                return this.Query_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_MessageField, value) != true)) {
                    this.Query_MessageField = value;
                    this.RaisePropertyChanged("Query_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Name {
            get {
                return this.Query_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_NameField, value) != true)) {
                    this.Query_NameField = value;
                    this.RaisePropertyChanged("Query_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_PhoneNumber {
            get {
                return this.Query_PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_PhoneNumberField, value) != true)) {
                    this.Query_PhoneNumberField = value;
                    this.RaisePropertyChanged("Query_PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Surname {
            get {
                return this.Query_SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_SurnameField, value) != true)) {
                    this.Query_SurnameField = value;
                    this.RaisePropertyChanged("Query_Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Testimonial", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Testimonial : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Customer_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Testimonial_descriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Customer_Id {
            get {
                return this.Customer_IdField;
            }
            set {
                if ((this.Customer_IdField.Equals(value) != true)) {
                    this.Customer_IdField = value;
                    this.RaisePropertyChanged("Customer_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Testimonial_description {
            get {
                return this.Testimonial_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Testimonial_descriptionField, value) != true)) {
                    this.Testimonial_descriptionField = value;
                    this.RaisePropertyChanged("Testimonial_description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Purchase", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Purchase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AuthorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Customer_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Discount_percentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string delivery_AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> delivery_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int loyalty_pointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> shippingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Authorized {
            get {
                return this.AuthorizedField;
            }
            set {
                if ((this.AuthorizedField.Equals(value) != true)) {
                    this.AuthorizedField = value;
                    this.RaisePropertyChanged("Authorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Customer_id {
            get {
                return this.Customer_idField;
            }
            set {
                if ((this.Customer_idField.Equals(value) != true)) {
                    this.Customer_idField = value;
                    this.RaisePropertyChanged("Customer_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount_percentage {
            get {
                return this.Discount_percentageField;
            }
            set {
                if ((this.Discount_percentageField.Equals(value) != true)) {
                    this.Discount_percentageField = value;
                    this.RaisePropertyChanged("Discount_percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_id {
            get {
                return this.Product_idField;
            }
            set {
                if ((this.Product_idField.Equals(value) != true)) {
                    this.Product_idField = value;
                    this.RaisePropertyChanged("Product_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string delivery_Address {
            get {
                return this.delivery_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.delivery_AddressField, value) != true)) {
                    this.delivery_AddressField = value;
                    this.RaisePropertyChanged("delivery_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> delivery_date {
            get {
                return this.delivery_dateField;
            }
            set {
                if ((this.delivery_dateField.Equals(value) != true)) {
                    this.delivery_dateField = value;
                    this.RaisePropertyChanged("delivery_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int loyalty_points {
            get {
                return this.loyalty_pointsField;
            }
            set {
                if ((this.loyalty_pointsField.Equals(value) != true)) {
                    this.loyalty_pointsField = value;
                    this.RaisePropertyChanged("loyalty_points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> shipping {
            get {
                return this.shippingField;
            }
            set {
                if ((this.shippingField.Equals(value) != true)) {
                    this.shippingField = value;
                    this.RaisePropertyChanged("shipping");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee_Task", Namespace="http://schemas.datacontract.org/2004/07/GasUp_Service")]
    [System.SerializableAttribute()]
    public partial class Employee_Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Task_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int emp_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int num_tasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string task_doneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Task_ID {
            get {
                return this.Task_IDField;
            }
            set {
                if ((this.Task_IDField.Equals(value) != true)) {
                    this.Task_IDField = value;
                    this.RaisePropertyChanged("Task_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int emp_id {
            get {
                return this.emp_idField;
            }
            set {
                if ((this.emp_idField.Equals(value) != true)) {
                    this.emp_idField = value;
                    this.RaisePropertyChanged("emp_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int num_tasks {
            get {
                return this.num_tasksField;
            }
            set {
                if ((this.num_tasksField.Equals(value) != true)) {
                    this.num_tasksField = value;
                    this.RaisePropertyChanged("num_tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string task_done {
            get {
                return this.task_doneField;
            }
            set {
                if ((object.ReferenceEquals(this.task_doneField, value) != true)) {
                    this.task_doneField = value;
                    this.RaisePropertyChanged("task_done");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProducts", ReplyAction="http://tempuri.org/IService1/getProductsResponse")]
        GasUp_Website.ServiceReference1.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProducts", ReplyAction="http://tempuri.org/IService1/getProductsResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        GasUp_Website.ServiceReference1.Product getProduct(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Product> getProductAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInstallations", ReplyAction="http://tempuri.org/IService1/getInstallationsResponse")]
        GasUp_Website.ServiceReference1.Installation[] getInstallations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInstallations", ReplyAction="http://tempuri.org/IService1/getInstallationsResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Installation[]> getInstallationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInstallation", ReplyAction="http://tempuri.org/IService1/getInstallationResponse")]
        GasUp_Website.ServiceReference1.Installation getInstallation(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInstallation", ReplyAction="http://tempuri.org/IService1/getInstallationResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Installation> getInstallationAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        bool addProduct(string description, string category, decimal price, decimal product_size, int availability, string productimage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        System.Threading.Tasks.Task<bool> addProductAsync(string description, string category, decimal price, decimal product_size, int availability, string productimage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCocApplication", ReplyAction="http://tempuri.org/IService1/addCocApplicationResponse")]
        bool addCocApplication(string email, string phone, string install);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCocApplication", ReplyAction="http://tempuri.org/IService1/addCocApplicationResponse")]
        System.Threading.Tasks.Task<bool> addCocApplicationAsync(string email, string phone, string install);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addQuery", ReplyAction="http://tempuri.org/IService1/addQueryResponse")]
        bool addQuery(string name, string surname, string email, string phone, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addQuery", ReplyAction="http://tempuri.org/IService1/addQueryResponse")]
        System.Threading.Tasks.Task<bool> addQueryAsync(string name, string surname, string email, string phone, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCocApplications", ReplyAction="http://tempuri.org/IService1/getCocApplicationsResponse")]
        GasUp_Website.ServiceReference1.ApplyCOC[] getCocApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCocApplications", ReplyAction="http://tempuri.org/IService1/getCocApplicationsResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.ApplyCOC[]> getCocApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getQueries", ReplyAction="http://tempuri.org/IService1/getQueriesResponse")]
        GasUp_Website.ServiceReference1.Query[] getQueries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getQueries", ReplyAction="http://tempuri.org/IService1/getQueriesResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Query[]> getQueriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        bool editProduct(int Id, string description, string category, decimal price, decimal product_size, int availability, string productimage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        System.Threading.Tasks.Task<bool> editProductAsync(int Id, string description, string category, decimal price, decimal product_size, int availability, string productimage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegUser", ReplyAction="http://tempuri.org/IService1/RegUserResponse")]
        bool RegUser(string name, string surname, string email, string phone, string password, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegUser", ReplyAction="http://tempuri.org/IService1/RegUserResponse")]
        System.Threading.Tasks.Task<bool> RegUserAsync(string name, string surname, string email, string phone, string password, string UserType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        GasUp_Website.ServiceReference1.User getUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User> getUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EmailgetUser", ReplyAction="http://tempuri.org/IService1/EmailgetUserResponse")]
        GasUp_Website.ServiceReference1.User EmailgetUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EmailgetUser", ReplyAction="http://tempuri.org/IService1/EmailgetUserResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User> EmailgetUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        bool EditUser(int id, string name, string surname, string phonenumber, string email, string usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(int id, string name, string surname, string phonenumber, string email, string usertype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUserpassword", ReplyAction="http://tempuri.org/IService1/updateUserpasswordResponse")]
        bool updateUserpassword(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUserpassword", ReplyAction="http://tempuri.org/IService1/updateUserpasswordResponse")]
        System.Threading.Tasks.Task<bool> updateUserpasswordAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        GasUp_Website.ServiceReference1.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTestimonials", ReplyAction="http://tempuri.org/IService1/GetTestimonialsResponse")]
        GasUp_Website.ServiceReference1.Testimonial[] GetTestimonials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTestimonials", ReplyAction="http://tempuri.org/IService1/GetTestimonialsResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Testimonial[]> GetTestimonialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_testimonial", ReplyAction="http://tempuri.org/IService1/add_testimonialResponse")]
        bool add_testimonial(int id, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_testimonial", ReplyAction="http://tempuri.org/IService1/add_testimonialResponse")]
        System.Threading.Tasks.Task<bool> add_testimonialAsync(int id, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/remove_product", ReplyAction="http://tempuri.org/IService1/remove_productResponse")]
        bool remove_product(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/remove_product", ReplyAction="http://tempuri.org/IService1/remove_productResponse")]
        System.Threading.Tasks.Task<bool> remove_productAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_purchase", ReplyAction="http://tempuri.org/IService1/Add_purchaseResponse")]
        bool Add_purchase(int Customer_id, int Product_id, System.DateTime date, bool Authorized, int quantity, decimal discount_p, string address, int shipping, int loyalty_points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_purchase", ReplyAction="http://tempuri.org/IService1/Add_purchaseResponse")]
        System.Threading.Tasks.Task<bool> Add_purchaseAsync(int Customer_id, int Product_id, System.DateTime date, bool Authorized, int quantity, decimal discount_p, string address, int shipping, int loyalty_points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit_purchase", ReplyAction="http://tempuri.org/IService1/Edit_purchaseResponse")]
        bool Edit_purchase(int purchase_id, bool Authorized);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit_purchase", ReplyAction="http://tempuri.org/IService1/Edit_purchaseResponse")]
        System.Threading.Tasks.Task<bool> Edit_purchaseAsync(int purchase_id, bool Authorized);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit_loyaltypoints", ReplyAction="http://tempuri.org/IService1/Edit_loyaltypointsResponse")]
        bool Edit_loyaltypoints(int purchase_id, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Edit_loyaltypoints", ReplyAction="http://tempuri.org/IService1/Edit_loyaltypointsResponse")]
        System.Threading.Tasks.Task<bool> Edit_loyaltypointsAsync(int purchase_id, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchase", ReplyAction="http://tempuri.org/IService1/get_purchaseResponse")]
        GasUp_Website.ServiceReference1.Purchase get_purchase(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchase", ReplyAction="http://tempuri.org/IService1/get_purchaseResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase> get_purchaseAsync(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchase_cust", ReplyAction="http://tempuri.org/IService1/get_purchase_custResponse")]
        GasUp_Website.ServiceReference1.Purchase get_purchase_cust(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchase_cust", ReplyAction="http://tempuri.org/IService1/get_purchase_custResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase> get_purchase_custAsync(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchases", ReplyAction="http://tempuri.org/IService1/get_purchasesResponse")]
        GasUp_Website.ServiceReference1.Purchase[] get_purchases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_purchases", ReplyAction="http://tempuri.org/IService1/get_purchasesResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase[]> get_purchasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Assign_Task", ReplyAction="http://tempuri.org/IService1/Assign_TaskResponse")]
        bool Assign_Task(int emp, int taskid, int tasknum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Assign_Task", ReplyAction="http://tempuri.org/IService1/Assign_TaskResponse")]
        System.Threading.Tasks.Task<bool> Assign_TaskAsync(int emp, int taskid, int tasknum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Unassign_Task", ReplyAction="http://tempuri.org/IService1/Unassign_TaskResponse")]
        bool Unassign_Task(int empid, int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Unassign_Task", ReplyAction="http://tempuri.org/IService1/Unassign_TaskResponse")]
        System.Threading.Tasks.Task<bool> Unassign_TaskAsync(int empid, int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_TaskedEmployees", ReplyAction="http://tempuri.org/IService1/get_TaskedEmployeesResponse")]
        GasUp_Website.ServiceReference1.Employee_Task[] get_TaskedEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_TaskedEmployees", ReplyAction="http://tempuri.org/IService1/get_TaskedEmployeesResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Employee_Task[]> get_TaskedEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_TaskedEmployee", ReplyAction="http://tempuri.org/IService1/get_TaskedEmployeeResponse")]
        GasUp_Website.ServiceReference1.Employee_Task get_TaskedEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_TaskedEmployee", ReplyAction="http://tempuri.org/IService1/get_TaskedEmployeeResponse")]
        System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Employee_Task> get_TaskedEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/num_tasks", ReplyAction="http://tempuri.org/IService1/num_tasksResponse")]
        int num_tasks(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/num_tasks", ReplyAction="http://tempuri.org/IService1/num_tasksResponse")]
        System.Threading.Tasks.Task<int> num_tasksAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskid", ReplyAction="http://tempuri.org/IService1/getTaskidResponse")]
        int getTaskid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskid", ReplyAction="http://tempuri.org/IService1/getTaskidResponse")]
        System.Threading.Tasks.Task<int> getTaskidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/task_done", ReplyAction="http://tempuri.org/IService1/task_doneResponse")]
        bool task_done(int id, string messg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/task_done", ReplyAction="http://tempuri.org/IService1/task_doneResponse")]
        System.Threading.Tasks.Task<bool> task_doneAsync(int id, string messg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GasUp_Website.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GasUp_Website.ServiceReference1.IService1>, GasUp_Website.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GasUp_Website.ServiceReference1.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public GasUp_Website.ServiceReference1.Product getProduct(int Id) {
            return base.Channel.getProduct(Id);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Product> getProductAsync(int Id) {
            return base.Channel.getProductAsync(Id);
        }
        
        public GasUp_Website.ServiceReference1.Installation[] getInstallations() {
            return base.Channel.getInstallations();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Installation[]> getInstallationsAsync() {
            return base.Channel.getInstallationsAsync();
        }
        
        public GasUp_Website.ServiceReference1.Installation getInstallation(int Id) {
            return base.Channel.getInstallation(Id);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Installation> getInstallationAsync(int Id) {
            return base.Channel.getInstallationAsync(Id);
        }
        
        public bool addProduct(string description, string category, decimal price, decimal product_size, int availability, string productimage) {
            return base.Channel.addProduct(description, category, price, product_size, availability, productimage);
        }
        
        public System.Threading.Tasks.Task<bool> addProductAsync(string description, string category, decimal price, decimal product_size, int availability, string productimage) {
            return base.Channel.addProductAsync(description, category, price, product_size, availability, productimage);
        }
        
        public bool addCocApplication(string email, string phone, string install) {
            return base.Channel.addCocApplication(email, phone, install);
        }
        
        public System.Threading.Tasks.Task<bool> addCocApplicationAsync(string email, string phone, string install) {
            return base.Channel.addCocApplicationAsync(email, phone, install);
        }
        
        public bool addQuery(string name, string surname, string email, string phone, string message) {
            return base.Channel.addQuery(name, surname, email, phone, message);
        }
        
        public System.Threading.Tasks.Task<bool> addQueryAsync(string name, string surname, string email, string phone, string message) {
            return base.Channel.addQueryAsync(name, surname, email, phone, message);
        }
        
        public GasUp_Website.ServiceReference1.ApplyCOC[] getCocApplications() {
            return base.Channel.getCocApplications();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.ApplyCOC[]> getCocApplicationsAsync() {
            return base.Channel.getCocApplicationsAsync();
        }
        
        public GasUp_Website.ServiceReference1.Query[] getQueries() {
            return base.Channel.getQueries();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Query[]> getQueriesAsync() {
            return base.Channel.getQueriesAsync();
        }
        
        public bool editProduct(int Id, string description, string category, decimal price, decimal product_size, int availability, string productimage) {
            return base.Channel.editProduct(Id, description, category, price, product_size, availability, productimage);
        }
        
        public System.Threading.Tasks.Task<bool> editProductAsync(int Id, string description, string category, decimal price, decimal product_size, int availability, string productimage) {
            return base.Channel.editProductAsync(Id, description, category, price, product_size, availability, productimage);
        }
        
        public bool RegUser(string name, string surname, string email, string phone, string password, string UserType) {
            return base.Channel.RegUser(name, surname, email, phone, password, UserType);
        }
        
        public System.Threading.Tasks.Task<bool> RegUserAsync(string name, string surname, string email, string phone, string password, string UserType) {
            return base.Channel.RegUserAsync(name, surname, email, phone, password, UserType);
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public GasUp_Website.ServiceReference1.User getUser(int ID) {
            return base.Channel.getUser(ID);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User> getUserAsync(int ID) {
            return base.Channel.getUserAsync(ID);
        }
        
        public GasUp_Website.ServiceReference1.User EmailgetUser(string email) {
            return base.Channel.EmailgetUser(email);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User> EmailgetUserAsync(string email) {
            return base.Channel.EmailgetUserAsync(email);
        }
        
        public bool EditUser(int id, string name, string surname, string phonenumber, string email, string usertype) {
            return base.Channel.EditUser(id, name, surname, phonenumber, email, usertype);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(int id, string name, string surname, string phonenumber, string email, string usertype) {
            return base.Channel.EditUserAsync(id, name, surname, phonenumber, email, usertype);
        }
        
        public bool updateUserpassword(string email, string password) {
            return base.Channel.updateUserpassword(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> updateUserpasswordAsync(string email, string password) {
            return base.Channel.updateUserpasswordAsync(email, password);
        }
        
        public GasUp_Website.ServiceReference1.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public GasUp_Website.ServiceReference1.Testimonial[] GetTestimonials() {
            return base.Channel.GetTestimonials();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Testimonial[]> GetTestimonialsAsync() {
            return base.Channel.GetTestimonialsAsync();
        }
        
        public bool add_testimonial(int id, string message) {
            return base.Channel.add_testimonial(id, message);
        }
        
        public System.Threading.Tasks.Task<bool> add_testimonialAsync(int id, string message) {
            return base.Channel.add_testimonialAsync(id, message);
        }
        
        public bool remove_product(int id) {
            return base.Channel.remove_product(id);
        }
        
        public System.Threading.Tasks.Task<bool> remove_productAsync(int id) {
            return base.Channel.remove_productAsync(id);
        }
        
        public bool Add_purchase(int Customer_id, int Product_id, System.DateTime date, bool Authorized, int quantity, decimal discount_p, string address, int shipping, int loyalty_points) {
            return base.Channel.Add_purchase(Customer_id, Product_id, date, Authorized, quantity, discount_p, address, shipping, loyalty_points);
        }
        
        public System.Threading.Tasks.Task<bool> Add_purchaseAsync(int Customer_id, int Product_id, System.DateTime date, bool Authorized, int quantity, decimal discount_p, string address, int shipping, int loyalty_points) {
            return base.Channel.Add_purchaseAsync(Customer_id, Product_id, date, Authorized, quantity, discount_p, address, shipping, loyalty_points);
        }
        
        public bool Edit_purchase(int purchase_id, bool Authorized) {
            return base.Channel.Edit_purchase(purchase_id, Authorized);
        }
        
        public System.Threading.Tasks.Task<bool> Edit_purchaseAsync(int purchase_id, bool Authorized) {
            return base.Channel.Edit_purchaseAsync(purchase_id, Authorized);
        }
        
        public bool Edit_loyaltypoints(int purchase_id, int points) {
            return base.Channel.Edit_loyaltypoints(purchase_id, points);
        }
        
        public System.Threading.Tasks.Task<bool> Edit_loyaltypointsAsync(int purchase_id, int points) {
            return base.Channel.Edit_loyaltypointsAsync(purchase_id, points);
        }
        
        public GasUp_Website.ServiceReference1.Purchase get_purchase(int customerid) {
            return base.Channel.get_purchase(customerid);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase> get_purchaseAsync(int customerid) {
            return base.Channel.get_purchaseAsync(customerid);
        }
        
        public GasUp_Website.ServiceReference1.Purchase get_purchase_cust(int customerid) {
            return base.Channel.get_purchase_cust(customerid);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase> get_purchase_custAsync(int customerid) {
            return base.Channel.get_purchase_custAsync(customerid);
        }
        
        public GasUp_Website.ServiceReference1.Purchase[] get_purchases() {
            return base.Channel.get_purchases();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Purchase[]> get_purchasesAsync() {
            return base.Channel.get_purchasesAsync();
        }
        
        public bool Assign_Task(int emp, int taskid, int tasknum) {
            return base.Channel.Assign_Task(emp, taskid, tasknum);
        }
        
        public System.Threading.Tasks.Task<bool> Assign_TaskAsync(int emp, int taskid, int tasknum) {
            return base.Channel.Assign_TaskAsync(emp, taskid, tasknum);
        }
        
        public bool Unassign_Task(int empid, int num) {
            return base.Channel.Unassign_Task(empid, num);
        }
        
        public System.Threading.Tasks.Task<bool> Unassign_TaskAsync(int empid, int num) {
            return base.Channel.Unassign_TaskAsync(empid, num);
        }
        
        public GasUp_Website.ServiceReference1.Employee_Task[] get_TaskedEmployees() {
            return base.Channel.get_TaskedEmployees();
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Employee_Task[]> get_TaskedEmployeesAsync() {
            return base.Channel.get_TaskedEmployeesAsync();
        }
        
        public GasUp_Website.ServiceReference1.Employee_Task get_TaskedEmployee(int id) {
            return base.Channel.get_TaskedEmployee(id);
        }
        
        public System.Threading.Tasks.Task<GasUp_Website.ServiceReference1.Employee_Task> get_TaskedEmployeeAsync(int id) {
            return base.Channel.get_TaskedEmployeeAsync(id);
        }
        
        public int num_tasks(int id) {
            return base.Channel.num_tasks(id);
        }
        
        public System.Threading.Tasks.Task<int> num_tasksAsync(int id) {
            return base.Channel.num_tasksAsync(id);
        }
        
        public int getTaskid(int id) {
            return base.Channel.getTaskid(id);
        }
        
        public System.Threading.Tasks.Task<int> getTaskidAsync(int id) {
            return base.Channel.getTaskidAsync(id);
        }
        
        public bool task_done(int id, string messg) {
            return base.Channel.task_done(id, messg);
        }
        
        public System.Threading.Tasks.Task<bool> task_doneAsync(int id, string messg) {
            return base.Channel.task_doneAsync(id, messg);
        }
    }
}
